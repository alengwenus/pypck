name: CI

on:
  push:
    branches:
      - dev
      - master
  pull_request: ~

env:
  CACHE_VERSION: 1
  DEFAULT_PYTHON: "3.13"
  PRE_COMMIT_HOME: ~/.cache/pre-commit

jobs:
  prepare-tests:
    name: Prepare tests for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ matrix.python-version }} virtual environment
        uses: actions/setup-python@v5.1.1
        id: python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore Python ${{ matrix.python-version }} virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('requirements_test*.txt') }}
          restore-keys: |
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-venv-${{ matrix.python-version }}-${{ hashFiles('requirements_test*.txt') }}
      - name: Create Python ${{ matrix.python-version }} virtual environment
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv venv
          . venv/bin/activate
          pip install -U pip setuptools
          pip install -r requirements_test.txt
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: |
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ env.CACHE_VERSION}}-${{ runner.os }}-pre-commit
      - name: Install pre-commit dependencies
        if: steps.cache-precommit.outputs.cache-hit != 'true'
        run: |
          . venv/bin/activate
          pre-commit install-hooks

  lint-ruff-format:
    name: Check ruff-format
    runs-on: ubuntu-latest
    needs: prepare-tests
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5.1.1
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore Python ${{ env.DEFAULT_PYTHON }} virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION }}-${{ runner.os }}-venv-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('requirements_test*.txt') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Run ruff
        run: |
          . venv/bin/activate
          pre-commit run --hook-stage manual ruff --all-files --show-diff-on-failure
        env:
          RUFF_OUTPUT_FORMAT: github

  mypy:
    name: Check mypy
    runs-on: ubuntu-latest
    needs: prepare-tests
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5.1.1
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore Python ${{ env.DEFAULT_PYTHON }} virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION }}-${{ runner.os }}-venv-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('requirements_test*.txt') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Run mypy
        run: |
          . venv/bin/activate
          mypy --strict pypck

  lint-codespell:
    name: Check codespell
    runs-on: ubuntu-latest
    needs: prepare-tests
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5.1.1
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore Python ${{ env.DEFAULT_PYTHON }} virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION }}-${{ runner.os }}-venv-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('requirements_test*.txt') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Restore pre-commit environment from cache
        id: cache-precommit
        uses: actions/cache@v4.0.2
        with:
          path: ${{ env.PRE_COMMIT_HOME }}
          key: |
            ${{ env.CACHE_VERSION }}-${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Fail job if cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Run codespell
        run: |
          . venv/bin/activate
          pre-commit run codespell --all-files --show-diff-on-failure

  pytest:
    runs-on: ubuntu-latest
    needs: prepare-tests
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    name: Run tests Python ${{ matrix.python-version }}
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.1.1
        id: python
        with:
          python-version: ${{ matrix.python-version }}
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION }}-${{ runner.os }}-venv-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('requirements_test*.txt') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Run pytest
        run: |
          . venv/bin/activate
          pytest \
            --timeout=9 \
            --durations=10 \
            --cov pypck \
            tests
      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4.3.6
        with:
          name: coverage-${{ matrix.python-version }}
          path: .coverage

  coverage:
    name: Process test coverage
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v4.1.7
      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5.1.1
        id: python
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Restore Python virtual environment
        id: cache-venv
        uses: actions/cache@v4.0.2
        with:
          path: venv
          key: >-
            ${{ env.CACHE_VERSION }}-${{ runner.os }}-venv-${{
            steps.python.outputs.python-version }}-${{
            hashFiles('requirements_test*.txt') }}
      - name: Fail job if Python cache restore failed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          echo "Failed to restore Python virtual environment from cache"
          exit 1
      - name: Download coverage artifacts
        uses: actions/download-artifact@v4.1.8
      - name: Combine coverage results
        run: |
          . venv/bin/activate
          coverage combine coverage*/.coverage*
          coverage report --fail-under=70
          coverage xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4.5.0
